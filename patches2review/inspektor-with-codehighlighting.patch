Index: web/src/main/java/de/betterform/agent/web/servlet/XFormsInspectorServlet.java
===================================================================
--- web/src/main/java/de/betterform/agent/web/servlet/XFormsInspectorServlet.java	(revision fc8087ddff604754a048403fe55da8f6b36c14a2)
+++ web/src/main/java/de/betterform/agent/web/servlet/XFormsInspectorServlet.java	(revision )
@@ -8,6 +8,7 @@
 
 import de.betterform.agent.web.WebFactory;
 import de.betterform.agent.web.WebUtil;
+import de.betterform.generator.XSLTGenerator;
 import de.betterform.xml.config.Config;
 import de.betterform.xml.config.XFormsConfigException;
 import de.betterform.xml.dom.DOMUtil;
@@ -23,14 +24,20 @@
 import org.w3c.xforms.XFormsModelElement;
 
 import javax.servlet.ServletConfig;
+import javax.servlet.ServletContext;
 import javax.servlet.ServletException;
 import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 import javax.servlet.http.HttpSession;
+import javax.xml.transform.Source;
 import javax.xml.transform.TransformerException;
+import javax.xml.transform.dom.DOMResult;
+import javax.xml.transform.dom.DOMSource;
+import javax.xml.transform.stream.StreamResult;
 import java.io.IOException;
 import java.io.OutputStream;
+import java.net.URISyntaxException;
 
 /**
  * @author Joern Turner
@@ -87,11 +94,26 @@
             if (resource.indexOf("hostDOM") != -1) {
                 // output Host document markup
                 Node host = processor.getXForms();
+                ServletContext servletContext = getServletContext();
+
+                XSLTGenerator generator = WebFactory.setupTransformer(servletContext.getRealPath("resources/xslt")+"","highlight.xsl",servletContext);
+                generator.setParameter("contextName",request.getContextPath());
+                Source source = new DOMSource(host);
+                generator.setInput(source);
+                generator.setOutputProperty("indent","yes");
+
+
                 OutputStream out = response.getOutputStream();
-                response.setContentType("text/plain");
+                response.setContentType("text/html");
                 request.setAttribute(WebFactory.IGNORE_RESPONSE_BODY, "TRUE");
-                DOMUtil.prettyPrintDOM(host, out);
-                out.close();
+
+
+                generator.setOutput(out);
+//                DOMResult result = new DOMResult(DOMUtil.newDocument(true,true));
+//                generator.setOutput(result);
+                generator.generate();
+//                DOMUtil.prettyPrintDOM(result.getNode(), out);
+//                out.close();
             } else {
                 String modelId = steps[4];
                 String instanceId = steps[5];
@@ -118,14 +140,23 @@
 
         } catch (XFormsException e) {
             e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
+            sendError(request,response,session,e,e.getMessage());
         } catch (TransformerException e) {
             e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
+            sendError(request,response,session,e,e.getMessage());
+        } catch (URISyntaxException e) {
+            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
+            sendError(request,response,session,e,e.getMessage());
         }
 
 
         // write to outputstream
     }
 
+    private void transformToStream(){
+
+    }
+
     private void sendError(HttpServletRequest request, HttpServletResponse response, HttpSession session, Exception e,String message) throws ServletException, IOException {
         session.setAttribute("betterform.exception", e);
         session.setAttribute("betterform.exception.message",message);
