<?xml version="1.0" encoding="UTF-8" ?>
<!--
    author: Joern Turner
    author: Lars Windauer
 -->
<project id="web" name="betterForm Web" default="deploy-resources" basedir="." xmlns:bf="bar">

    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- ###
          ATTENTION - the properties below must be set before build.properties.xml
          is called - DO NOT MOVE
  ###  -->

    <property name="root.dir" value=".."/>
    <property name="src.dir" value="../src"/>
    <property name="core.dir" value="../core"/>
    <property name="web.dir" value="."/>
    <property name="dojo.name" value="dojo-release-1.2.3"/>
    <xmlproperty file="../build.properties.xml" semanticAttributes="true" keepRoot="false"/>


    <!-- local Web properties -->
    <property name="forms.target" value="forms"/>
    <property name="lib.dir" value="${basedir}/src/main/lib"/>
    <property name="target" value="${basedir}/target"/>
    <property name="webapp.dir" value="${target}/${web.app.name}"/>
    <property name="targetname" value="${target}/${web.app.name}-${web.app.version}"/>
    <property name="servlet.container" value="${properties.webappPath}"/>

    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <target name="clean" description="clean build target directory">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="cleaning up web..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <delete dir="${basedir}/target"/>
    </target>

    <!-- **************************************** PREPARATION **************************************** -->
    <!-- **************************************** PREPARATION **************************************** -->
    <!-- **************************************** PREPARATION **************************************** -->
    <target name="prepare" description="init the build process">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying Core classes..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <tstamp/>
        <mkdir dir="${target}/classes"/>

        <ant antfile="build.xml" target="compile" dir="${core.dir}" inheritall="false"/>

        <copy todir="${target}/classes">
            <fileset dir="${core.dir}/target/classes"/>
        </copy>
    </target>

    <target name="prepare-dojo" depends="check.dojo" if="dojo.not.available">
        <ant antfile="build.xml" target="prepare-js" dir=".." inheritall="false"/>
        <copy description="copy javascript resources from global directory"
              todir="${webapp.dir}/resources/scripts"
              includeemptydirs="true">
            <fileset dir="../target/resources/scripts">
                <include name="**/*.*"/>
            </fileset>
        </copy>
    </target>

    <!-- **************************************** COMPILATION **************************************** -->
    <!-- **************************************** COMPILATION **************************************** -->
    <!-- **************************************** COMPILATION **************************************** -->

    <!--
        Default build.properties setting are as below. If you need to compile with debug settings you can either
        a. change relevant properties in build.properties.xml or
        b. call Ant like this: ant compile -Djavac.debug="true"

        javac.debug=off
        javac.deprecation=off
        javac.optimize=on

    -->

    <target name="compile" depends="prepare" description="compile all web sources">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="compiling Web classes..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <javac description="compile source files"
               srcdir="${basedir}/src/main/java"
               destdir="${target}/classes"
               classpathref="web.class.path"
               target="${properties.javac.version}"
               debug="${properties.javac.debug}"
               deprecation="${properties.javac.deprecation}"
               optimize="${properties.javac.optimize}"
                />
    </target>

    <!-- **************************************** DEPLOYMENT **************************************** -->
    <!-- **************************************** DEPLOYMENT **************************************** -->
    <!-- **************************************** DEPLOYMENT **************************************** -->


    <target name="exploded-webapp" depends="compile"
            description="builds an exploded webapp with expanded 'WEB-INF/classes' dir">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="build deployment structure (exploded war)..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <mkdir dir="${webapp.dir}"/>


        <!-- copy the webapp directory -->
        <copy description="copy webapp"
              todir="${webapp.dir}"
              filtering="true"
              includeemptydirs="true">
            <fileset dir="${basedir}/src/main/webapp"/>
        </copy>

        <copy description="copy resources from global 'src' directory"
              todir="${webapp.dir}/resources"
              includeemptydirs="true">
            <fileset dir="${src.dir}/main/resources">
                <include name="**/*.*"/>
            </fileset>
        </copy>

        <copy description="copy images seperately to avoid filtering"
              todir="${webapp.dir}/resources"
              overwrite="true"
              filtering="false">
            <fileset dir="${src.dir}/main/resources">
                <include name="**/*.gif"/>
                <include name="**/*.png"/>
                <include name="**/*.jpg"/>
            </fileset>
        </copy>


        <mkdir dir="${webapp.dir}/WEB-INF/lib"/>

        <move file="${target}/classes"
              todir="${webapp.dir}/WEB-INF"
              description="move betterForm classes to WEB-INF"/>

        <copy todir="${webapp.dir}/WEB-INF/lib" description="copy dependent libraries from Core">
            <fileset dir="${core.dir}/src/main/lib" excludes="**/betterform-core"/>
        </copy>

        <copy todir="${webapp.dir}/WEB-INF/lib" description="copy dependent libraries from Web" flatten="true">

            <!--  TODO: need a better solution here - not all libs form web/src/main/lib are runtime relevant.
                  Therefore i copy the only needed lib directly here.
            -->
            <fileset dir="${basedir}/src/main/lib" excludes="**/${core.app.name}-${core.app.version}.jar">
                <include name="**/dwr*"/>
            </fileset>
        </copy>
        <antcall target="prepare-dojo"/>

        <!--
                <copy description="copy all resources"
                    todir="${webapp.dir}/WEB-INF/classes"
                    includeemptydirs="false"
                    overwrite="true">
                    <fileset dir="${basedir}/src/main/resources"/>
                </copy>
        -->
        <delete file="${webapp.dir}/WEB-INF/classes/log4j.xml"/>
        <delete file="${webapp.dir}/WEB-INF/classes/log4j.dtd"/>

    </target>

    <target name="deploy-resources" depends="exploded-webapp"
            description="copy all forms from src/main/xforms to webapp dir">

        <property name="onlineVersion" value="false"/>
        <antcall target="generateSite"/>
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying forms..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <copy todir="${webapp.dir}/${forms.target}"
              overwrite="true">
            <fileset dir="${basedir}/${properties.rootDir}/src/main/xforms"/>
        </copy>
    </target>

    <target name="deploy-to-servlet-container" depends="deploy-resources"
            description="copy all resources (including forms) to webapp dir">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="deploy into servlet container..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <copy todir="${servlet.container}/${web.app.name}"
              overwrite="true">
            <fileset dir="${webapp.dir}"/>
        </copy>
    </target>


    <target name="deploy-test-resources" description="copy all official XForms test suite files to webapp dir">
        <ant antfile="build.xml" target="deploy-resources" dir="${basedir}" inheritall="false"/>

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying Test Suites..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <copy todir="${webapp.dir}/${forms.target}">
            <fileset dir="../src/test/resources"/>
        </copy>
    </target>

    <!-- build betterForm Boilerplate pages-->
    <target name="generateSite">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="generating site..."/>
        <echo message="************************************************************************************"/>
        <echo/>


        <xslt basedir="${basedir}/../src/main/doc/site/content"
              destdir="${webapp.dir}"
              style="${basedir}/../src/main/doc/site/xslt/site.xsl"
              processor="trax"
              force="true"
              includes="*.xml"
              extension=".html">
            <classpath refid="saxon.libs"/>
            <param name="onlineVersion" expression="${onlineVersion}"/>
        </xslt>

        <copy todir="${webapp.dir}/resources/images">
            <fileset dir="${basedir}/../src/main/doc/site/images"/>
        </copy>
        <copy todir="${webapp.dir}/resources/styles">
            <fileset dir="${basedir}/../src/main/doc/site/styles"/>
        </copy>
        <copy todir="${webapp.dir}/reports">
            <fileset dir="${basedir}/../src/main/doc/site/content/reports"/>
        </copy>

    </target>

    <!-- **************************************** BUILDING JAR **************************************** -->
    <!-- **************************************** BUILDING JAR **************************************** -->
    <!-- **************************************** BUILDING JAR **************************************** -->

    <!-- todo: when package is executed it should be made sure that 'dojo' is configured as useragent in betterform-config.xml -->
    <target name="package" depends="build-dojo" description="create war file">
        <echo/>
        <property name="onlineVersion" value="true"/>

        <echo message="************************************************************************************"/>
        <echo message="clean up package..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <delete dir="${webapp.dir}/forms/apps"/>
        <delete dir="${webapp.dir}/forms/demo"/>
        <delete dir="${webapp.dir}/forms/incubator"/>
        <delete dir="${webapp.dir}/forms/reference"/>
        <delete dir="${webapp.dir}/forms/test"/>
        <delete dir="${webapp.dir}/forms/v3"/>


        <delete dir="${webapp.dir}/resources/scripts/betterform"/>
        <delete dir="${webapp.dir}/resources/scripts/dijit"/>
        <delete dir="${webapp.dir}/resources/scripts/dojo"/>
        <delete dir="${webapp.dir}/resources/scripts/dojox"/>
        <delete dir="${webapp.dir}/resources/scripts/util"/>

        <delete includeemptydirs="true">
            <fileset dir="${webapp.dir}/resources/scripts/release/dojo" includes="**/tests/"/>
        </delete>
        <copy todir="${webapp.dir}"
              file="${basedir}/../src/test/resources/XFormsTestSuite1.1E1/Edition1/driverPages/Results/results.html"/>


        <copy todir="${webapp.dir}/forms">
            <fileset dir="${webapp.dir}/forms"/>
            <globmapper from="*.xhtml" to="*.txt"/>
        </copy>
        <antcall target="create-war"/>
    </target>

    <target name="create-war">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="creating war-file..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <war warfile="${targetname}.war"
             webxml="${webapp.dir}/WEB-INF/web.xml"
             basedir="${webapp.dir}">
        </war>
    </target>
    <!-- todo: add target 'package-for-integration' that contains all files needed for inclusion in another webapp-->

    <!-- **************************************** SOURCE DISTRIBUTION **************************************** -->
    <!-- **************************************** SOURCE DISTRIBUTION **************************************** -->
    <!-- **************************************** SOURCE DISTRIBUTION **************************************** -->
    <target name="prepare-distribute" depends="clean">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="preparing distribution..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying source web source tree..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <copy todir="${targetname}/web">
            <fileset dir="${basedir}"/>
        </copy>

        <copy file="${basedir}/../build.properties.xml" todir="${targetname}"
              description="copy global build.properties.xml"/>

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="building Core jar for inclusion into web sources..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <ant antfile="${core.dir}/build.xml" target="clean" dir="${core.dir}"/>
        <ant antfile="${core.dir}/build.xml" target="package" dir="${core.dir}" inheritall="false"/>

        <copy file="${core.dir}/target/${core.app.name}-${core.app.version}.jar"
              todir="${targetname}/web/src/main/lib"/>

        <copy todir="${targetname}/web/src/main/lib" flatten="true">
            <fileset dir="${core.dir}/src/main/lib"/>
        </copy>
    </target>

    <target name="distribute" depends="prepare-distribute"
            description="assembles binary and source distributions">

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="creating source distribution..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="creating gzip..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <tar description="create source tarball"
             tarfile="${targetname}-src.tar"
             basedir="${targetname}"/>

        <gzip description="create source tarball"
              zipfile="target/${web.app.name}-${web.app.version}-src.tar.gz"
              src="target/${web.app.name}-${web.app.version}-src.tar"/>
        <delete description="create source tarball"
                file="target/${web.app.name}-${web.app.version}-src.tar"/>

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="creating zip..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <zip description="create source zip"
             zipfile="target/${web.app.name}-${web.app.version}-src.zip"
             basedir="${targetname}"/>
    </target>


    <!-- **************************************** DOC TARGETS **************************************** -->
    <!-- **************************************** DOC TARGETS **************************************** -->
    <!-- **************************************** DOC TARGETS **************************************** -->
    <target name="doc" depends="compile" description="generate documentation">
        <!--create deploy directory-->
        <mkdir dir="${basedir}/target/doc"/>

        <!--generate source code documentation-->
        <javadoc description="generate api documentation"
                 sourcepath="${basedir}/src/main/java"
                 destdir="${basedir}/target/doc"
                 classpathref="compile.class.path"
                 packagenames="de.betterform.*">
        </javadoc>

        <!--set version filter-->
        <filter token="app.version" value="${app.version}"/>
    </target>

    <!-- **************************************** DOJO TARGETS **************************************** -->
    <!-- **************************************** DOJO TARGETS **************************************** -->
    <!-- **************************************** DOJO TARGETS **************************************** -->
    <target name="build-dojo" depends="deploy-resources" >
        <java classname="org.mozilla.javascript.tools.shell.Main"
              dir="${webapp.dir}/resources/scripts/util/buildscripts"
              classpath="${webapp.dir}/resources/scripts/util/shrinksafe/js.jar:${webapp.dir}/resources/scripts/util/shrinksafe/shrinksafe.jar"
              jvmversion="1.5"
              fork="true"
              maxmemory="512m">

            <arg value="build.js"/>
            <arg value="profile=betterform"/>
            <arg value="localeList='en,us'"/>
            <arg value="optimize=shrinksafe"/>
            <arg value="mini=true "/>
            <arg value="copyTests=false"/>
            <arg value="cssOptimize=comments"/>
            <arg value="action=clean,release"/>
            <arg value="version=1.3"/>
        </java>
    </target>


    <target name="check.dojo">
        <echo>Check condition</echo>
        <condition property="dojo.not.available">
            <not>
                <available file="${webapp.dir}/resources/scripts/dojo/dojo.js"/>
            </not>
        </condition>
    </target>

    <!-- **************************************** FORM AGGREGATION TARGETS **************************************** -->
    <!-- **************************************** FORM AGGREGATION TARGETS **************************************** -->
    <!-- **************************************** FORM AGGREGATION TARGETS **************************************** -->


    <path id="saxon.libs" description="classpath for Saxon">
        <pathelement location="${basedir}/../core/src/main/lib/saxon-9.0.jar"/>
        <pathelement location="${basedir}/../core/src/main/lib/saxon-dom-9.0.jar"/>
    </path>


    <!-- ### applies include.xsl to all forms found in 'src/main/forms/xforms' and
deploys the result to target ### -->
    <target name="assembleForms">

        <xslt basedir="${basedir}/${properties.rootDir}/src/main/xforms"
              destdir="${webapp.dir}/${forms.target}"
              style="${basedir}/src/main/webapp/resources/xslt/include.xsl"
              force="true"
              includes="**/*.xhtml"
              extension=".xhtml">
            <classpath refid="saxon.libs"/>
        </xslt>
    </target>
</project>
