<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2011sp1

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" exclude-result-prefixes="xs fn">
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/" xpath-default-namespace="urn:icit:greenery:desadv">
		<xsl:variable name="var1_DESADV" as="node()*" select="DESADV"/>
		<email xmlns="urn:icit:greenery:email">
			<subject>
				<xsl:for-each select="$var1_DESADV/HeaderAddresses/Supplier/Name/node()[fn:boolean(self::text())]">
					<nameSupplier>
						<xsl:sequence select="fn:string(.)"/>
					</nameSupplier>
				</xsl:for-each>
				<departureDate>
					<xsl:for-each select="$var1_DESADV/HeaderInfo/DateTimeOfDeparture">
						<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
					</xsl:for-each>
				</departureDate>
				<deliveryDate>
					<xsl:for-each select="$var1_DESADV/HeaderInfo/EstimatedDateTimeOfArrival">
						<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
					</xsl:for-each>
				</deliveryDate>
				<packinglistReference>
					<xsl:for-each select="$var1_DESADV/HeaderInfo/PackingListNumber">
						<xsl:sequence select="fn:string(.)"/>
					</xsl:for-each>
				</packinglistReference>
				<xsl:for-each select="$var1_DESADV/HeaderInfo/DetailsOfTransport/air/TransportID">
					<AirwayBillNumber>
						<xsl:sequence select="fn:string(.)"/>
					</AirwayBillNumber>
				</xsl:for-each>
				<xsl:for-each select="$var1_DESADV/HeaderInfo/DetailsOfTransport/train/TransportID">
					<LicencePlate>
						<xsl:sequence select="fn:string(.)"/>
					</LicencePlate>
				</xsl:for-each>
				<xsl:for-each select="$var1_DESADV/HeaderInfo/DetailsOfTransport/boat/TransportID">
					<ContainerNumber>
						<xsl:sequence select="fn:string(.)"/>
					</ContainerNumber>
				</xsl:for-each>
			</subject>
			<body>
				<xsl:for-each select="$var1_DESADV/Consignment/LineInfos">
					<lines>
						<xsl:for-each select="LineInfo">
							<line>
								<greeneryArticleNumber>
									<xsl:for-each select="BuyerProductCode">
										<xsl:sequence select="fn:string(.)"/>
									</xsl:for-each>
								</greeneryArticleNumber>
								<articleDescription>
									<xsl:for-each select="Description">
										<xsl:sequence select="fn:string(.)"/>
									</xsl:for-each>
								</articleDescription>
								<quantityDelivered>
									<xsl:for-each select="DespatchQuantityPCE">
										<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
									</xsl:for-each>
								</quantityDelivered>
								<xsl:for-each select="OrderedQuantityPCE">
									<quantityOrdered>
										<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
									</quantityOrdered>
								</xsl:for-each>
								<xsl:for-each select="Unitprice">
									<price>
										<xsl:sequence select="fn:string(.)"/>
									</price>
								</xsl:for-each>
							</line>
						</xsl:for-each>
					</lines>
				</xsl:for-each>
			</body>
			<ccemailaddress>
				<xsl:sequence select="'sourcingimportedi@thegreenery.com'"/>
			</ccemailaddress>
			<sender>
				<xsl:for-each select="$var1_DESADV/HeaderAddresses/DeliveryParty/Name">
					<xsl:sequence select="fn:string(.)"/>
				</xsl:for-each>
			</sender>
		</email>
	</xsl:template>
</xsl:stylesheet>
