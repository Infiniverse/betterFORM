<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2011sp1

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:ns0="urn:icit:greenery:desadv" exclude-result-prefixes="xs fn">
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var1_DESADV" as="node()?" select="ns0:DESADV"/>
		<xsl:variable name="var2_resultof_exists" as="xs:boolean" select="fn:exists($var1_DESADV/ns0:HeaderInfo/ns0:DetailsOfTransport/ns0:boat)"/>
		<xsl:variable name="var3_resultof_exists" as="xs:boolean" select="fn:exists($var1_DESADV/ns0:HeaderInfo/ns0:DetailsOfTransport/ns0:air)"/>
		<xsl:variable name="var4_resultof_exists" as="xs:boolean" select="fn:exists($var1_DESADV/ns0:HeaderInfo/ns0:DetailsOfTransport/ns0:train)"/>
		<DESADV xmlns="urn:icit:greenery:desadv">
			<xsl:for-each select="$var1_DESADV">
				<xsl:variable name="var5_Envelop_Info" as="node()" select="ns0:Envelop_Info"/>
				<Envelop_Info>
					<CompanyName>
						<xsl:sequence select="fn:string($var5_Envelop_Info/ns0:CompanyName)"/>
					</CompanyName>
					<CompanyGLN>
						<xsl:sequence select="fn:string($var5_Envelop_Info/ns0:CompanyGLN)"/>
					</CompanyGLN>
					<MessageDateTime>
						<xsl:sequence select="xs:string(fn:current-dateTime())"/>
					</MessageDateTime>
					<MessageReference>
						<xsl:sequence select="''"/>
					</MessageReference>
				</Envelop_Info>
			</xsl:for-each>
			<HeaderInfo>
				<xsl:for-each select="$var1_DESADV">
					<DeliveryType>
						<xsl:sequence select="fn:string(ns0:HeaderInfo/ns0:DeliveryType)"/>
					</DeliveryType>
				</xsl:for-each>
				<xsl:for-each select="$var1_DESADV">
					<DateTimeOfDeparture>
						<xsl:sequence select="xs:string(xs:dateTime(fn:string(ns0:HeaderInfo/ns0:DateTimeOfDeparture)))"/>
					</DateTimeOfDeparture>
				</xsl:for-each>
				<xsl:for-each select="$var1_DESADV">
					<EstimatedDateTimeOfArrival>
						<xsl:sequence select="xs:string(xs:dateTime(fn:string(ns0:HeaderInfo/ns0:EstimatedDateTimeOfArrival)))"/>
					</EstimatedDateTimeOfArrival>
				</xsl:for-each>
				<PackingListNumber>
					<xsl:sequence select="''"/>
				</PackingListNumber>
				<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:ContractNumber">
					<ContractNumber>
						<xsl:sequence select="fn:string(.)"/>
					</ContractNumber>
				</xsl:for-each>
				<xsl:for-each select="$var1_DESADV">
					<SupplierOrderNumber>
						<xsl:sequence select="fn:string(ns0:HeaderInfo/ns0:SupplierOrderNumber)"/>
					</SupplierOrderNumber>
				</xsl:for-each>
				<Documenten>
					<xsl:sequence select="()"/>
				</Documenten>
				<xsl:for-each select="$var1_DESADV">
					<emailaddress>
						<xsl:sequence select="fn:string(ns0:HeaderInfo/ns0:emailaddress)"/>
					</emailaddress>
				</xsl:for-each>
				<DetailsOfTransport>
					<boat>
						<MethodOfTransport>
							<xsl:sequence select="'10'"/>
						</MethodOfTransport>
						<xsl:if test="(fn:not($var2_resultof_exists) or fn:exists($var1_DESADV/ns0:HeaderInfo/ns0:DetailsOfTransport/ns0:boat))">
							<carrierName>
								<xsl:choose>
									<xsl:when test="$var2_resultof_exists">
										<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:DetailsOfTransport/ns0:boat">
											<xsl:sequence select="fn:string(ns0:carrierName)"/>
										</xsl:for-each>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</carrierName>
						</xsl:if>
						<TransportID>
							<xsl:sequence select="''"/>
						</TransportID>
					</boat>
					<train>
						<MethodOfTransport>
							<xsl:sequence select="'30'"/>
						</MethodOfTransport>
						<xsl:if test="(fn:not($var4_resultof_exists) or fn:exists($var1_DESADV/ns0:HeaderInfo/ns0:DetailsOfTransport/ns0:train))">
							<carrierName>
								<xsl:choose>
									<xsl:when test="$var4_resultof_exists">
										<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:DetailsOfTransport/ns0:train">
											<xsl:sequence select="fn:string(ns0:carrierName)"/>
										</xsl:for-each>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</carrierName>
						</xsl:if>
						<TransportID>
							<xsl:sequence select="''"/>
						</TransportID>
					</train>
					<air>
						<MethodOfTransport>
							<xsl:sequence select="'40'"/>
						</MethodOfTransport>
						<xsl:if test="(fn:not($var3_resultof_exists) or fn:exists($var1_DESADV/ns0:HeaderInfo/ns0:DetailsOfTransport/ns0:air))">
							<carrierName>
								<xsl:choose>
									<xsl:when test="$var3_resultof_exists">
										<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:DetailsOfTransport/ns0:air">
											<xsl:sequence select="fn:string(ns0:carrierName)"/>
										</xsl:for-each>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</carrierName>
						</xsl:if>
						<TransportID>
							<xsl:sequence select="''"/>
						</TransportID>
					</air>
				</DetailsOfTransport>
				<Incoterms>
					<cfr>
						<xsl:variable name="var6_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:cfr">
								<xsl:sequence select="fn:string(ns0:Incoterm)"/>
							</xsl:for-each>
						</xsl:variable>
						<Incoterm>
							<xsl:choose>
								<xsl:when test="fn:exists($var6_let)">
									<xsl:sequence select="$var6_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Incoterm>
						<xsl:variable name="var7_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:cfr">
								<xsl:sequence select="fn:string(ns0:Place)"/>
							</xsl:for-each>
						</xsl:variable>
						<Place>
							<xsl:choose>
								<xsl:when test="fn:exists($var7_let)">
									<xsl:sequence select="$var7_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Place>
					</cfr>
					<cif>
						<xsl:variable name="var8_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:cif">
								<xsl:sequence select="fn:string(ns0:Incoterm)"/>
							</xsl:for-each>
						</xsl:variable>
						<Incoterm>
							<xsl:choose>
								<xsl:when test="fn:exists($var8_let)">
									<xsl:sequence select="$var8_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Incoterm>
						<xsl:variable name="var9_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:cif">
								<xsl:sequence select="fn:string(ns0:Place)"/>
							</xsl:for-each>
						</xsl:variable>
						<Place>
							<xsl:choose>
								<xsl:when test="fn:exists($var9_let)">
									<xsl:sequence select="$var9_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Place>
					</cif>
					<cip>
						<xsl:variable name="var10_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:cip">
								<xsl:sequence select="fn:string(ns0:Incoterm)"/>
							</xsl:for-each>
						</xsl:variable>
						<Incoterm>
							<xsl:choose>
								<xsl:when test="fn:exists($var10_let)">
									<xsl:sequence select="$var10_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Incoterm>
						<xsl:variable name="var11_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:cip">
								<xsl:sequence select="fn:string(ns0:Place)"/>
							</xsl:for-each>
						</xsl:variable>
						<Place>
							<xsl:choose>
								<xsl:when test="fn:exists($var11_let)">
									<xsl:sequence select="$var11_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Place>
					</cip>
					<cpt>
						<xsl:variable name="var12_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:cpt">
								<xsl:sequence select="fn:string(ns0:Incoterm)"/>
							</xsl:for-each>
						</xsl:variable>
						<Incoterm>
							<xsl:choose>
								<xsl:when test="fn:exists($var12_let)">
									<xsl:sequence select="$var12_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Incoterm>
						<xsl:variable name="var13_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:cpt">
								<xsl:sequence select="fn:string(ns0:Place)"/>
							</xsl:for-each>
						</xsl:variable>
						<Place>
							<xsl:choose>
								<xsl:when test="fn:exists($var13_let)">
									<xsl:sequence select="$var13_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Place>
					</cpt>
					<dap>
						<xsl:variable name="var14_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:dap">
								<xsl:sequence select="fn:string(ns0:Incoterm)"/>
							</xsl:for-each>
						</xsl:variable>
						<Incoterm>
							<xsl:choose>
								<xsl:when test="fn:exists($var14_let)">
									<xsl:sequence select="$var14_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Incoterm>
						<xsl:variable name="var15_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:dap">
								<xsl:sequence select="fn:string(ns0:Place)"/>
							</xsl:for-each>
						</xsl:variable>
						<Place>
							<xsl:choose>
								<xsl:when test="fn:exists($var15_let)">
									<xsl:sequence select="$var15_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Place>
					</dap>
					<dat>
						<xsl:variable name="var16_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:dat">
								<xsl:sequence select="fn:string(ns0:Incoterm)"/>
							</xsl:for-each>
						</xsl:variable>
						<Incoterm>
							<xsl:choose>
								<xsl:when test="fn:exists($var16_let)">
									<xsl:sequence select="$var16_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Incoterm>
						<xsl:variable name="var17_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:dat">
								<xsl:sequence select="fn:string(ns0:Place)"/>
							</xsl:for-each>
						</xsl:variable>
						<Place>
							<xsl:choose>
								<xsl:when test="fn:exists($var17_let)">
									<xsl:sequence select="$var17_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Place>
					</dat>
					<ddp>
						<xsl:variable name="var18_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:ddp">
								<xsl:sequence select="fn:string(ns0:Incoterm)"/>
							</xsl:for-each>
						</xsl:variable>
						<Incoterm>
							<xsl:choose>
								<xsl:when test="fn:exists($var18_let)">
									<xsl:sequence select="$var18_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Incoterm>
						<xsl:variable name="var19_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:ddp">
								<xsl:sequence select="fn:string(ns0:Place)"/>
							</xsl:for-each>
						</xsl:variable>
						<Place>
							<xsl:choose>
								<xsl:when test="fn:exists($var19_let)">
									<xsl:sequence select="$var19_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Place>
					</ddp>
					<exw>
						<xsl:variable name="var20_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:exw">
								<xsl:sequence select="fn:string(ns0:Incoterm)"/>
							</xsl:for-each>
						</xsl:variable>
						<Incoterm>
							<xsl:choose>
								<xsl:when test="fn:exists($var20_let)">
									<xsl:sequence select="$var20_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Incoterm>
						<xsl:variable name="var21_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:exw">
								<xsl:sequence select="fn:string(ns0:Place)"/>
							</xsl:for-each>
						</xsl:variable>
						<Place>
							<xsl:choose>
								<xsl:when test="fn:exists($var21_let)">
									<xsl:sequence select="$var21_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Place>
					</exw>
					<fas>
						<xsl:variable name="var22_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:fas">
								<xsl:sequence select="fn:string(ns0:Incoterm)"/>
							</xsl:for-each>
						</xsl:variable>
						<Incoterm>
							<xsl:choose>
								<xsl:when test="fn:exists($var22_let)">
									<xsl:sequence select="$var22_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Incoterm>
						<xsl:variable name="var23_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:fas">
								<xsl:sequence select="fn:string(ns0:Place)"/>
							</xsl:for-each>
						</xsl:variable>
						<Place>
							<xsl:choose>
								<xsl:when test="fn:exists($var23_let)">
									<xsl:sequence select="$var23_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Place>
					</fas>
					<fca>
						<xsl:variable name="var24_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:fca">
								<xsl:sequence select="fn:string(ns0:Incoterm)"/>
							</xsl:for-each>
						</xsl:variable>
						<Incoterm>
							<xsl:choose>
								<xsl:when test="fn:exists($var24_let)">
									<xsl:sequence select="$var24_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Incoterm>
						<xsl:variable name="var25_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:fca">
								<xsl:sequence select="fn:string(ns0:Place)"/>
							</xsl:for-each>
						</xsl:variable>
						<Place>
							<xsl:choose>
								<xsl:when test="fn:exists($var25_let)">
									<xsl:sequence select="$var25_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Place>
					</fca>
					<fob>
						<xsl:variable name="var26_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:fob">
								<xsl:sequence select="fn:string(ns0:Incoterm)"/>
							</xsl:for-each>
						</xsl:variable>
						<Incoterm>
							<xsl:choose>
								<xsl:when test="fn:exists($var26_let)">
									<xsl:sequence select="$var26_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Incoterm>
						<xsl:variable name="var27_let" as="xs:string?">
							<xsl:for-each select="$var1_DESADV/ns0:HeaderInfo/ns0:Incoterms/ns0:fob">
								<xsl:sequence select="fn:string(ns0:Place)"/>
							</xsl:for-each>
						</xsl:variable>
						<Place>
							<xsl:choose>
								<xsl:when test="fn:exists($var27_let)">
									<xsl:sequence select="$var27_let"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:sequence select="''"/>
								</xsl:otherwise>
							</xsl:choose>
						</Place>
					</fob>
				</Incoterms>
			</HeaderInfo>
			<xsl:for-each select="$var1_DESADV">
				<xsl:variable name="var28_HeaderAddresses" as="node()" select="ns0:HeaderAddresses"/>
				<HeaderAddresses>
					<xsl:sequence select="($var28_HeaderAddresses/@node(), $var28_HeaderAddresses/node())"/>
				</HeaderAddresses>
			</xsl:for-each>
			<Consignment>
				<xsl:for-each select="$var1_DESADV">
					<LineInfos>
						<xsl:for-each select="ns0:Consignment/ns0:LineInfos/ns0:LineInfo">
							<xsl:variable name="var29_FreeText" as="item()*" select="ns0:FreeText"/>
							<xsl:variable name="var30_DeliveryParty" as="node()" select="ns0:DeliveryParty"/>
							<xsl:variable name="var31_result" as="node()+">
								<dummy xmlns="">
									<xsl:sequence select="fn:string($var30_DeliveryParty/ns0:Country)"/>
								</dummy>
							</xsl:variable>
							<xsl:variable name="var32_resultof_first" as="node()" select="$var31_result[xs:integer('1')]"/>
							<xsl:variable name="var33_result" as="node()+">
								<dummy xmlns="">
									<xsl:sequence select="fn:string($var30_DeliveryParty/ns0:LocCode)"/>
								</dummy>
							</xsl:variable>
							<xsl:variable name="var34_resultof_first" as="node()" select="$var33_result[xs:integer('1')]"/>
							<xsl:variable name="var35_result" as="node()+">
								<dummy xmlns="">
									<xsl:sequence select="fn:string($var30_DeliveryParty/ns0:City)"/>
								</dummy>
							</xsl:variable>
							<xsl:variable name="var36_resultof_first" as="node()" select="$var35_result[xs:integer('1')]"/>
							<xsl:variable name="var37_result" as="node()+">
								<dummy xmlns="">
									<xsl:sequence select="fn:string($var30_DeliveryParty/ns0:PostalCode)"/>
								</dummy>
							</xsl:variable>
							<xsl:variable name="var38_resultof_first" as="node()" select="$var37_result[xs:integer('1')]"/>
							<xsl:variable name="var39_result" as="node()+">
								<dummy xmlns="">
									<xsl:sequence select="fn:string($var30_DeliveryParty/ns0:Name)"/>
								</dummy>
							</xsl:variable>
							<xsl:variable name="var40_resultof_first" as="node()" select="$var39_result[xs:integer('1')]"/>
							<xsl:variable name="var41_result" as="node()+">
								<dummy xmlns="">
									<xsl:sequence select="fn:string($var30_DeliveryParty/ns0:Address)"/>
								</dummy>
							</xsl:variable>
							<xsl:variable name="var42_resultof_first" as="node()" select="$var41_result[xs:integer('1')]"/>
							<xsl:variable name="var43_result" as="node()+">
								<dummy xmlns="">
									<xsl:sequence select="fn:string($var30_DeliveryParty/ns0:GLN)"/>
								</dummy>
							</xsl:variable>
							<xsl:variable name="var44_resultof_first" as="node()" select="$var43_result[xs:integer('1')]"/>
							<xsl:variable name="var45_nil" as="item()*" select="$var44_resultof_first/@xsi:nil"/>
							<xsl:variable name="var46_nil" as="item()*" select="$var36_resultof_first/@xsi:nil"/>
							<xsl:variable name="var47_nil" as="item()*" select="$var34_resultof_first/@xsi:nil"/>
							<xsl:variable name="var48_nil" as="item()*" select="$var32_resultof_first/@xsi:nil"/>
							<xsl:variable name="var49_nil" as="item()*" select="$var42_resultof_first/@xsi:nil"/>
							<xsl:variable name="var50_nil" as="item()*" select="$var38_resultof_first/@xsi:nil"/>
							<xsl:variable name="var51_nil" as="item()*" select="$var40_resultof_first/@xsi:nil"/>
							<xsl:variable name="var52_val" as="xs:boolean" select="(fn:exists($var49_nil) and xs:boolean(fn:string($var49_nil)))"/>
							<xsl:variable name="var53_val" as="xs:boolean" select="(fn:exists($var51_nil) and xs:boolean(fn:string($var51_nil)))"/>
							<xsl:variable name="var54_val" as="xs:boolean" select="(fn:exists($var47_nil) and xs:boolean(fn:string($var47_nil)))"/>
							<xsl:variable name="var55_val" as="xs:boolean" select="(fn:exists($var45_nil) and xs:boolean(fn:string($var45_nil)))"/>
							<xsl:variable name="var56_val" as="xs:boolean" select="(fn:exists($var48_nil) and xs:boolean(fn:string($var48_nil)))"/>
							<xsl:variable name="var57_val" as="xs:boolean" select="(fn:exists($var46_nil) and xs:boolean(fn:string($var46_nil)))"/>
							<xsl:variable name="var58_val" as="xs:boolean" select="(fn:exists($var50_nil) and xs:boolean(fn:string($var50_nil)))"/>
							<LineInfo>
								<LineNo>
									<xsl:sequence select="fn:string(ns0:LineNo)"/>
								</LineNo>
								<GTIN>
									<xsl:sequence select="fn:string(ns0:GTIN)"/>
								</GTIN>
								<BuyerProductCode>
									<xsl:sequence select="fn:string(ns0:BuyerProductCode)"/>
								</BuyerProductCode>
								<GreeneryFullProductCode>
									<xsl:sequence select="fn:string(ns0:GreeneryFullProductCode)"/>
								</GreeneryFullProductCode>
								<Description>
									<xsl:sequence select="fn:string(ns0:Description)"/>
								</Description>
								<Content>
									<xsl:sequence select="fn:string(ns0:Content)"/>
								</Content>
								<CU>
									<xsl:sequence select="fn:string(ns0:CU)"/>
								</CU>
								<PackageType>
									<xsl:sequence select="fn:string(ns0:PackageType)"/>
								</PackageType>
								<DespatchQuantityPCE>
									<xsl:sequence select="xs:string(xs:integer('0'))"/>
								</DespatchQuantityPCE>
								<NumberOfUnitsPerPallet>
									<xsl:sequence select="xs:string(xs:integer(fn:string(ns0:NumberOfUnitsPerPallet)))"/>
								</NumberOfUnitsPerPallet>
								<xsl:for-each select="ns0:Unitprice">
									<Unitprice>
										<xsl:sequence select="fn:string(.)"/>
									</Unitprice>
								</xsl:for-each>
								<NumberOfPallets>
									<xsl:sequence select="xs:string(xs:integer('0'))"/>
								</NumberOfPallets>
								<xsl:for-each select="ns0:PalletCodeHAS">
									<PalletCodeHAS>
										<xsl:sequence select="fn:string(.)"/>
									</PalletCodeHAS>
								</xsl:for-each>
								<xsl:variable name="var59_result" as="node()+">
									<xsl:choose>
										<xsl:when test="fn:exists($var29_FreeText)">
											<xsl:for-each select="$var29_FreeText">
												<dummy xmlns="">
													<xsl:sequence select="fn:string(.)"/>
												</dummy>
											</xsl:for-each>
										</xsl:when>
										<xsl:otherwise>
											<dummy xmlns="">
												<xsl:attribute name="xsi:nil" select="'true'"/>
											</dummy>
										</xsl:otherwise>
									</xsl:choose>
								</xsl:variable>
								<xsl:for-each select="$var59_result">
									<xsl:variable name="var60_nil" as="item()*" select="@xsi:nil"/>
									<xsl:variable name="var61_val" as="xs:boolean" select="(fn:exists($var60_nil) and xs:boolean(fn:string($var60_nil)))"/>
									<FreeText>
										<xsl:if test="fn:not($var61_val)">
											<xsl:if test="fn:not($var61_val)">
												<xsl:sequence select="fn:string(.)"/>
											</xsl:if>
										</xsl:if>
									</FreeText>
								</xsl:for-each>
								<DeliveryParty>
									<Name>
										<xsl:if test="fn:not($var53_val)">
											<xsl:if test="fn:not($var53_val)">
												<xsl:sequence select="fn:string($var40_resultof_first)"/>
											</xsl:if>
										</xsl:if>
									</Name>
									<Address>
										<xsl:if test="fn:not($var52_val)">
											<xsl:if test="fn:not($var52_val)">
												<xsl:sequence select="fn:string($var42_resultof_first)"/>
											</xsl:if>
										</xsl:if>
									</Address>
									<PostalCode>
										<xsl:if test="fn:not($var58_val)">
											<xsl:if test="fn:not($var58_val)">
												<xsl:sequence select="fn:string($var38_resultof_first)"/>
											</xsl:if>
										</xsl:if>
									</PostalCode>
									<City>
										<xsl:if test="fn:not($var57_val)">
											<xsl:if test="fn:not($var57_val)">
												<xsl:sequence select="fn:string($var36_resultof_first)"/>
											</xsl:if>
										</xsl:if>
									</City>
									<Country>
										<xsl:if test="fn:not($var56_val)">
											<xsl:if test="fn:not($var56_val)">
												<xsl:sequence select="fn:string($var32_resultof_first)"/>
											</xsl:if>
										</xsl:if>
									</Country>
									<GLN>
										<xsl:if test="fn:not($var55_val)">
											<xsl:if test="fn:not($var55_val)">
												<xsl:sequence select="fn:string($var44_resultof_first)"/>
											</xsl:if>
										</xsl:if>
									</GLN>
									<LocCode>
										<xsl:if test="fn:not($var54_val)">
											<xsl:if test="fn:not($var54_val)">
												<xsl:sequence select="fn:string($var34_resultof_first)"/>
											</xsl:if>
										</xsl:if>
									</LocCode>
								</DeliveryParty>
							</LineInfo>
						</xsl:for-each>
					</LineInfos>
				</xsl:for-each>
				<PalletInformationEuro>
					<NumberOfPallets>
						<xsl:sequence select="xs:string(xs:integer('0'))"/>
					</NumberOfPallets>
					<xsl:variable name="var62_result" as="node()+">
						<xsl:choose>
							<xsl:when test="fn:exists($var1_DESADV/ns0:Consignment/ns0:PalletInformationEuro)">
								<xsl:for-each select="$var1_DESADV/ns0:Consignment/ns0:PalletInformationEuro">
									<dummy xmlns="">
										<xsl:sequence select="fn:string(ns0:PalletCodeISO)"/>
									</dummy>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<dummy xmlns="">
									<xsl:attribute name="xsi:nil" select="'true'"/>
								</dummy>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:for-each select="$var62_result">
						<xsl:variable name="var63_nil" as="item()*" select="@xsi:nil"/>
						<xsl:variable name="var64_val" as="xs:boolean" select="(fn:exists($var63_nil) and xs:boolean(fn:string($var63_nil)))"/>
						<PalletCodeISO>
							<xsl:if test="fn:not($var64_val)">
								<xsl:if test="fn:not($var64_val)">
									<xsl:sequence select="fn:string(.)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeISO>
					</xsl:for-each>
					<xsl:variable name="var65_result" as="node()+">
						<xsl:choose>
							<xsl:when test="fn:exists($var1_DESADV/ns0:Consignment/ns0:PalletInformationEuro)">
								<xsl:for-each select="$var1_DESADV/ns0:Consignment/ns0:PalletInformationEuro">
									<dummy xmlns="">
										<xsl:sequence select="fn:string(ns0:PalletCodeHAS)"/>
									</dummy>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<dummy xmlns="">
									<xsl:attribute name="xsi:nil" select="'true'"/>
								</dummy>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:for-each select="$var65_result">
						<xsl:variable name="var66_nil" as="item()*" select="@xsi:nil"/>
						<xsl:variable name="var67_val" as="xs:boolean" select="(fn:exists($var66_nil) and xs:boolean(fn:string($var66_nil)))"/>
						<PalletCodeHAS>
							<xsl:if test="fn:not($var67_val)">
								<xsl:if test="fn:not($var67_val)">
									<xsl:sequence select="fn:string(.)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeHAS>
					</xsl:for-each>
				</PalletInformationEuro>
				<PalletInformationDPA>
					<NumberOfPallets>
						<xsl:sequence select="xs:string(xs:integer('0'))"/>
					</NumberOfPallets>
					<xsl:variable name="var68_result" as="node()+">
						<xsl:choose>
							<xsl:when test="fn:exists($var1_DESADV/ns0:Consignment/ns0:PalletInformationDPA)">
								<xsl:for-each select="$var1_DESADV/ns0:Consignment/ns0:PalletInformationDPA">
									<dummy xmlns="">
										<xsl:sequence select="fn:string(ns0:PalletCodeISO)"/>
									</dummy>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<dummy xmlns="">
									<xsl:attribute name="xsi:nil" select="'true'"/>
								</dummy>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:for-each select="$var68_result">
						<xsl:variable name="var69_nil" as="item()*" select="@xsi:nil"/>
						<xsl:variable name="var70_val" as="xs:boolean" select="(fn:exists($var69_nil) and xs:boolean(fn:string($var69_nil)))"/>
						<PalletCodeISO>
							<xsl:if test="fn:not($var70_val)">
								<xsl:if test="fn:not($var70_val)">
									<xsl:sequence select="fn:string(.)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeISO>
					</xsl:for-each>
					<xsl:variable name="var71_result" as="node()+">
						<xsl:choose>
							<xsl:when test="fn:exists($var1_DESADV/ns0:Consignment/ns0:PalletInformationDPA)">
								<xsl:for-each select="$var1_DESADV/ns0:Consignment/ns0:PalletInformationDPA">
									<dummy xmlns="">
										<xsl:sequence select="fn:string(ns0:PalletCodeHAS)"/>
									</dummy>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<dummy xmlns="">
									<xsl:attribute name="xsi:nil" select="'true'"/>
								</dummy>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:for-each select="$var71_result">
						<xsl:variable name="var72_nil" as="item()*" select="@xsi:nil"/>
						<xsl:variable name="var73_val" as="xs:boolean" select="(fn:exists($var72_nil) and xs:boolean(fn:string($var72_nil)))"/>
						<PalletCodeHAS>
							<xsl:if test="fn:not($var73_val)">
								<xsl:if test="fn:not($var73_val)">
									<xsl:sequence select="fn:string(.)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeHAS>
					</xsl:for-each>
				</PalletInformationDPA>
				<PalletInformationPool>
					<NumberOfPallets>
						<xsl:sequence select="xs:string(xs:integer('0'))"/>
					</NumberOfPallets>
					<xsl:variable name="var74_result" as="node()+">
						<xsl:choose>
							<xsl:when test="fn:exists($var1_DESADV/ns0:Consignment/ns0:PalletInformationPool)">
								<xsl:for-each select="$var1_DESADV/ns0:Consignment/ns0:PalletInformationPool">
									<dummy xmlns="">
										<xsl:sequence select="fn:string(ns0:PalletCodeISO)"/>
									</dummy>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<dummy xmlns="">
									<xsl:attribute name="xsi:nil" select="'true'"/>
								</dummy>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:for-each select="$var74_result">
						<xsl:variable name="var75_nil" as="item()*" select="@xsi:nil"/>
						<xsl:variable name="var76_val" as="xs:boolean" select="(fn:exists($var75_nil) and xs:boolean(fn:string($var75_nil)))"/>
						<PalletCodeISO>
							<xsl:if test="fn:not($var76_val)">
								<xsl:if test="fn:not($var76_val)">
									<xsl:sequence select="fn:string(.)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeISO>
					</xsl:for-each>
					<xsl:variable name="var77_result" as="node()+">
						<xsl:choose>
							<xsl:when test="fn:exists($var1_DESADV/ns0:Consignment/ns0:PalletInformationPool)">
								<xsl:for-each select="$var1_DESADV/ns0:Consignment/ns0:PalletInformationPool">
									<dummy xmlns="">
										<xsl:sequence select="fn:string(ns0:PalletCodeHAS)"/>
									</dummy>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<dummy xmlns="">
									<xsl:attribute name="xsi:nil" select="'true'"/>
								</dummy>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:for-each select="$var77_result">
						<xsl:variable name="var78_nil" as="item()*" select="@xsi:nil"/>
						<xsl:variable name="var79_val" as="xs:boolean" select="(fn:exists($var78_nil) and xs:boolean(fn:string($var78_nil)))"/>
						<PalletCodeHAS>
							<xsl:if test="fn:not($var79_val)">
								<xsl:if test="fn:not($var79_val)">
									<xsl:sequence select="fn:string(.)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeHAS>
					</xsl:for-each>
				</PalletInformationPool>
				<PalletInformationChepBlok>
					<NumberOfPallets>
						<xsl:sequence select="xs:string(xs:integer('0'))"/>
					</NumberOfPallets>
					<xsl:variable name="var80_result" as="node()+">
						<xsl:choose>
							<xsl:when test="fn:exists($var1_DESADV/ns0:Consignment/ns0:PalletInformationChepBlok)">
								<xsl:for-each select="$var1_DESADV/ns0:Consignment/ns0:PalletInformationChepBlok">
									<dummy xmlns="">
										<xsl:sequence select="fn:string(ns0:PalletCodeISO)"/>
									</dummy>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<dummy xmlns="">
									<xsl:attribute name="xsi:nil" select="'true'"/>
								</dummy>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:for-each select="$var80_result">
						<xsl:variable name="var81_nil" as="item()*" select="@xsi:nil"/>
						<xsl:variable name="var82_val" as="xs:boolean" select="(fn:exists($var81_nil) and xs:boolean(fn:string($var81_nil)))"/>
						<PalletCodeISO>
							<xsl:if test="fn:not($var82_val)">
								<xsl:if test="fn:not($var82_val)">
									<xsl:sequence select="fn:string(.)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeISO>
					</xsl:for-each>
					<xsl:variable name="var83_result" as="node()+">
						<xsl:choose>
							<xsl:when test="fn:exists($var1_DESADV/ns0:Consignment/ns0:PalletInformationChepBlok)">
								<xsl:for-each select="$var1_DESADV/ns0:Consignment/ns0:PalletInformationChepBlok">
									<dummy xmlns="">
										<xsl:sequence select="fn:string(ns0:PalletCodeHAS)"/>
									</dummy>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<dummy xmlns="">
									<xsl:attribute name="xsi:nil" select="'true'"/>
								</dummy>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:for-each select="$var83_result">
						<xsl:variable name="var84_nil" as="item()*" select="@xsi:nil"/>
						<xsl:variable name="var85_val" as="xs:boolean" select="(fn:exists($var84_nil) and xs:boolean(fn:string($var84_nil)))"/>
						<PalletCodeHAS>
							<xsl:if test="fn:not($var85_val)">
								<xsl:if test="fn:not($var85_val)">
									<xsl:sequence select="fn:string(.)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeHAS>
					</xsl:for-each>
				</PalletInformationChepBlok>
				<PalletInformationOneway>
					<NumberOfPallets>
						<xsl:sequence select="xs:string(xs:integer('0'))"/>
					</NumberOfPallets>
					<xsl:variable name="var86_result" as="node()+">
						<xsl:choose>
							<xsl:when test="fn:exists($var1_DESADV/ns0:Consignment/ns0:PalletInformationOneway)">
								<xsl:for-each select="$var1_DESADV/ns0:Consignment/ns0:PalletInformationOneway">
									<dummy xmlns="">
										<xsl:sequence select="fn:string(ns0:PalletCodeISO)"/>
									</dummy>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<dummy xmlns="">
									<xsl:attribute name="xsi:nil" select="'true'"/>
								</dummy>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:for-each select="$var86_result">
						<xsl:variable name="var87_nil" as="item()*" select="@xsi:nil"/>
						<xsl:variable name="var88_val" as="xs:boolean" select="(fn:exists($var87_nil) and xs:boolean(fn:string($var87_nil)))"/>
						<PalletCodeISO>
							<xsl:if test="fn:not($var88_val)">
								<xsl:if test="fn:not($var88_val)">
									<xsl:sequence select="fn:string(.)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeISO>
					</xsl:for-each>
					<xsl:variable name="var89_result" as="node()+">
						<xsl:choose>
							<xsl:when test="fn:exists($var1_DESADV/ns0:Consignment/ns0:PalletInformationOneway)">
								<xsl:for-each select="$var1_DESADV/ns0:Consignment/ns0:PalletInformationOneway">
									<dummy xmlns="">
										<xsl:sequence select="fn:string(ns0:PalletCodeHAS)"/>
									</dummy>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<dummy xmlns="">
									<xsl:attribute name="xsi:nil" select="'true'"/>
								</dummy>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:for-each select="$var89_result">
						<xsl:variable name="var90_nil" as="item()*" select="@xsi:nil"/>
						<xsl:variable name="var91_val" as="xs:boolean" select="(fn:exists($var90_nil) and xs:boolean(fn:string($var90_nil)))"/>
						<PalletCodeHAS>
							<xsl:if test="fn:not($var91_val)">
								<xsl:if test="fn:not($var91_val)">
									<xsl:sequence select="fn:string(.)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeHAS>
					</xsl:for-each>
				</PalletInformationOneway>
				<PalletInformationChepEuro>
					<NumberOfPallets>
						<xsl:sequence select="xs:string(xs:integer('0'))"/>
					</NumberOfPallets>
					<xsl:variable name="var92_result" as="node()+">
						<xsl:choose>
							<xsl:when test="fn:exists($var1_DESADV/ns0:Consignment/ns0:PalletInformationChepEuro)">
								<xsl:for-each select="$var1_DESADV/ns0:Consignment/ns0:PalletInformationChepEuro">
									<dummy xmlns="">
										<xsl:sequence select="fn:string(ns0:PalletCodeISO)"/>
									</dummy>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<dummy xmlns="">
									<xsl:attribute name="xsi:nil" select="'true'"/>
								</dummy>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:for-each select="$var92_result">
						<xsl:variable name="var93_nil" as="item()*" select="@xsi:nil"/>
						<xsl:variable name="var94_val" as="xs:boolean" select="(fn:exists($var93_nil) and xs:boolean(fn:string($var93_nil)))"/>
						<PalletCodeISO>
							<xsl:if test="fn:not($var94_val)">
								<xsl:if test="fn:not($var94_val)">
									<xsl:sequence select="fn:string(.)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeISO>
					</xsl:for-each>
					<xsl:variable name="var95_result" as="node()+">
						<xsl:choose>
							<xsl:when test="fn:exists($var1_DESADV/ns0:Consignment/ns0:PalletInformationChepEuro)">
								<xsl:for-each select="$var1_DESADV/ns0:Consignment/ns0:PalletInformationChepEuro">
									<dummy xmlns="">
										<xsl:sequence select="fn:string(ns0:PalletCodeHAS)"/>
									</dummy>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<dummy xmlns="">
									<xsl:attribute name="xsi:nil" select="'true'"/>
								</dummy>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:for-each select="$var95_result">
						<xsl:variable name="var96_nil" as="item()*" select="@xsi:nil"/>
						<xsl:variable name="var97_val" as="xs:boolean" select="(fn:exists($var96_nil) and xs:boolean(fn:string($var96_nil)))"/>
						<PalletCodeHAS>
							<xsl:if test="fn:not($var97_val)">
								<xsl:if test="fn:not($var97_val)">
									<xsl:sequence select="fn:string(.)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeHAS>
					</xsl:for-each>
				</PalletInformationChepEuro>
				<PalletInformationSkid>
					<NumberOfPallets>
						<xsl:sequence select="xs:string(xs:integer('0'))"/>
					</NumberOfPallets>
					<xsl:variable name="var98_result" as="node()+">
						<xsl:choose>
							<xsl:when test="fn:exists($var1_DESADV/ns0:Consignment/ns0:PalletInformationSkid)">
								<xsl:for-each select="$var1_DESADV/ns0:Consignment/ns0:PalletInformationSkid">
									<dummy xmlns="">
										<xsl:sequence select="fn:string(ns0:PalletCodeISO)"/>
									</dummy>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<dummy xmlns="">
									<xsl:attribute name="xsi:nil" select="'true'"/>
								</dummy>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:for-each select="$var98_result">
						<xsl:variable name="var99_nil" as="item()*" select="@xsi:nil"/>
						<xsl:variable name="var100_val" as="xs:boolean" select="(fn:exists($var99_nil) and xs:boolean(fn:string($var99_nil)))"/>
						<PalletCodeISO>
							<xsl:if test="fn:not($var100_val)">
								<xsl:if test="fn:not($var100_val)">
									<xsl:sequence select="fn:string(.)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeISO>
					</xsl:for-each>
					<xsl:variable name="var101_result" as="node()+">
						<xsl:choose>
							<xsl:when test="fn:exists($var1_DESADV/ns0:Consignment/ns0:PalletInformationSkid)">
								<xsl:for-each select="$var1_DESADV/ns0:Consignment/ns0:PalletInformationSkid">
									<dummy xmlns="">
										<xsl:sequence select="fn:string(ns0:PalletCodeHAS)"/>
									</dummy>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<dummy xmlns="">
									<xsl:attribute name="xsi:nil" select="'true'"/>
								</dummy>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:for-each select="$var101_result">
						<xsl:variable name="var102_nil" as="item()*" select="@xsi:nil"/>
						<xsl:variable name="var103_val" as="xs:boolean" select="(fn:exists($var102_nil) and xs:boolean(fn:string($var102_nil)))"/>
						<PalletCodeHAS>
							<xsl:if test="fn:not($var103_val)">
								<xsl:if test="fn:not($var103_val)">
									<xsl:sequence select="fn:string(.)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeHAS>
					</xsl:for-each>
				</PalletInformationSkid>
				<PalletInformationSuperVers>
					<NumberOfPallets>
						<xsl:sequence select="xs:string(xs:integer('0'))"/>
					</NumberOfPallets>
					<xsl:variable name="var104_result" as="node()+">
						<xsl:choose>
							<xsl:when test="fn:exists($var1_DESADV/ns0:Consignment/ns0:PalletInformationSuperVers)">
								<xsl:for-each select="$var1_DESADV/ns0:Consignment/ns0:PalletInformationSuperVers">
									<dummy xmlns="">
										<xsl:sequence select="fn:string(ns0:PalletCodeISO)"/>
									</dummy>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<dummy xmlns="">
									<xsl:attribute name="xsi:nil" select="'true'"/>
								</dummy>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:for-each select="$var104_result">
						<xsl:variable name="var105_nil" as="item()*" select="@xsi:nil"/>
						<xsl:variable name="var106_val" as="xs:boolean" select="(fn:exists($var105_nil) and xs:boolean(fn:string($var105_nil)))"/>
						<PalletCodeISO>
							<xsl:if test="fn:not($var106_val)">
								<xsl:if test="fn:not($var106_val)">
									<xsl:sequence select="fn:string(.)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeISO>
					</xsl:for-each>
					<xsl:variable name="var107_result" as="node()+">
						<xsl:choose>
							<xsl:when test="fn:exists($var1_DESADV/ns0:Consignment/ns0:PalletInformationSuperVers)">
								<xsl:for-each select="$var1_DESADV/ns0:Consignment/ns0:PalletInformationSuperVers">
									<dummy xmlns="">
										<xsl:sequence select="fn:string(ns0:PalletCodeHAS)"/>
									</dummy>
								</xsl:for-each>
							</xsl:when>
							<xsl:otherwise>
								<dummy xmlns="">
									<xsl:attribute name="xsi:nil" select="'true'"/>
								</dummy>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:for-each select="$var107_result">
						<xsl:variable name="var108_nil" as="item()*" select="@xsi:nil"/>
						<xsl:variable name="var109_val" as="xs:boolean" select="(fn:exists($var108_nil) and xs:boolean(fn:string($var108_nil)))"/>
						<PalletCodeHAS>
							<xsl:if test="fn:not($var109_val)">
								<xsl:if test="fn:not($var109_val)">
									<xsl:sequence select="fn:string(.)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeHAS>
					</xsl:for-each>
				</PalletInformationSuperVers>
			</Consignment>
		</DESADV>
	</xsl:template>
</xsl:stylesheet>
