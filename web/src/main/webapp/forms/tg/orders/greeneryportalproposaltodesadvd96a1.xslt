<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2011sp1

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:ns0="urn:icit:greenery:orders" exclude-result-prefixes="xs fn ns0">
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var1_cast" as="xs:string" select="xs:string(fn:current-dateTime())"/>
		<xsl:variable name="var2_DESADV" as="node()?" select="ns0:DESADV"/>
		<DESADV xmlns="urn:icit:greenery:desadv">
			<Envelop_Info>
				<xsl:for-each select="$var2_DESADV">
					<CompanyName>
						<xsl:sequence select="fn:string(ns0:Envelop_Info/ns0:CompanyName)"/>
					</CompanyName>
				</xsl:for-each>
				<xsl:for-each select="$var2_DESADV">
					<CompanyGLN>
						<xsl:sequence select="fn:string(ns0:Envelop_Info/ns0:CompanyGLN)"/>
					</CompanyGLN>
				</xsl:for-each>
				<MessageDateTime>
					<xsl:sequence select="$var1_cast"/>
				</MessageDateTime>
				<MessageReference>
					<xsl:sequence select="''"/>
				</MessageReference>
			</Envelop_Info>
			<xsl:for-each select="$var2_DESADV">
				<xsl:variable name="var3_val" as="xs:string" select="''"/>
				<xsl:variable name="var4_HeaderInfo" as="node()" select="ns0:HeaderInfo"/>
				<xsl:variable name="var5_Incoterms" as="node()" select="$var4_HeaderInfo/ns0:Incoterms"/>
				<xsl:variable name="var6_fob" as="node()?" select="$var5_Incoterms/ns0:fob"/>
				<xsl:variable name="var7_fca" as="node()?" select="$var5_Incoterms/ns0:fca"/>
				<xsl:variable name="var8_fas" as="node()?" select="$var5_Incoterms/ns0:fas"/>
				<xsl:variable name="var9_exw" as="node()?" select="$var5_Incoterms/ns0:exw"/>
				<xsl:variable name="var10_dap" as="node()?" select="$var5_Incoterms/ns0:dap"/>
				<xsl:variable name="var11_cpt" as="node()?" select="$var5_Incoterms/ns0:cpt"/>
				<xsl:variable name="var12_cip" as="node()?" select="$var5_Incoterms/ns0:cip"/>
				<xsl:variable name="var13_cif" as="node()?" select="$var5_Incoterms/ns0:cif"/>
				<xsl:variable name="var14_ddp" as="node()?" select="$var5_Incoterms/ns0:ddp"/>
				<xsl:variable name="var15_dat" as="node()?" select="$var5_Incoterms/ns0:dat"/>
				<xsl:variable name="var16_cfr" as="node()?" select="$var5_Incoterms/ns0:cfr"/>
				<xsl:variable name="var17_cast" as="xs:string" select="xs:string(xs:dateTime(fn:string($var4_HeaderInfo/ns0:EstimatedDateTimeOfArrival)))"/>
				<HeaderInfo>
					<DeliveryType>
						<xsl:sequence select="fn:string($var4_HeaderInfo/ns0:DeliveryType)"/>
					</DeliveryType>
					<DateTimeOfDeparture>
						<xsl:sequence select="$var1_cast"/>
					</DateTimeOfDeparture>
					<EstimatedDateTimeOfArrival>
						<xsl:sequence select="$var17_cast"/>
					</EstimatedDateTimeOfArrival>
					<Org_EstimatedDateTimeOfArrival>
						<xsl:sequence select="$var17_cast"/>
					</Org_EstimatedDateTimeOfArrival>
					<PackingListNumber>
						<xsl:sequence select="''"/>
					</PackingListNumber>
					<xsl:for-each select="$var4_HeaderInfo/ns0:ContractNumber">
						<ContractNumber>
							<xsl:sequence select="fn:string(.)"/>
						</ContractNumber>
					</xsl:for-each>
					<BuyerOrderNumber>
						<xsl:sequence select="fn:string($var4_HeaderInfo/ns0:BuyerOrderNumber)"/>
					</BuyerOrderNumber>
					<SupplierOrderNumber>
						<xsl:sequence select="''"/>
					</SupplierOrderNumber>
					<Documenten>
						<xsl:sequence select="()"/>
					</Documenten>
					<emailaddress>
						<xsl:sequence select="''"/>
					</emailaddress>
					<DetailsOfTransport>
						<boat>
							<MethodOfTransport>
								<xsl:sequence select="'10'"/>
							</MethodOfTransport>
							<carrierName>
								<xsl:sequence select="$var3_val"/>
							</carrierName>
							<TransportID>
								<xsl:sequence select="$var3_val"/>
							</TransportID>
						</boat>
						<train>
							<MethodOfTransport>
								<xsl:sequence select="'30'"/>
							</MethodOfTransport>
							<carrierName>
								<xsl:sequence select="$var3_val"/>
							</carrierName>
							<TransportID>
								<xsl:sequence select="$var3_val"/>
							</TransportID>
						</train>
						<air>
							<MethodOfTransport>
								<xsl:sequence select="'40'"/>
							</MethodOfTransport>
							<carrierName>
								<xsl:sequence select="$var3_val"/>
							</carrierName>
							<TransportID>
								<xsl:sequence select="$var3_val"/>
							</TransportID>
						</air>
					</DetailsOfTransport>
					<Incoterms>
						<cfr>
							<xsl:variable name="var18_let" as="xs:string?">
								<xsl:for-each select="$var16_cfr">
									<xsl:sequence select="fn:string(ns0:Incoterm)"/>
								</xsl:for-each>
							</xsl:variable>
							<Incoterm>
								<xsl:choose>
									<xsl:when test="fn:exists($var18_let)">
										<xsl:sequence select="$var18_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Incoterm>
							<xsl:variable name="var19_let" as="xs:string?">
								<xsl:for-each select="$var16_cfr">
									<xsl:sequence select="fn:string(ns0:Place)"/>
								</xsl:for-each>
							</xsl:variable>
							<Place>
								<xsl:choose>
									<xsl:when test="fn:exists($var19_let)">
										<xsl:sequence select="$var19_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Place>
						</cfr>
						<cif>
							<xsl:variable name="var20_let" as="xs:string?">
								<xsl:for-each select="$var13_cif">
									<xsl:sequence select="fn:string(ns0:Incoterm)"/>
								</xsl:for-each>
							</xsl:variable>
							<Incoterm>
								<xsl:choose>
									<xsl:when test="fn:exists($var20_let)">
										<xsl:sequence select="$var20_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Incoterm>
							<xsl:variable name="var21_let" as="xs:string?">
								<xsl:for-each select="$var13_cif">
									<xsl:sequence select="fn:string(ns0:Place)"/>
								</xsl:for-each>
							</xsl:variable>
							<Place>
								<xsl:choose>
									<xsl:when test="fn:exists($var21_let)">
										<xsl:sequence select="$var21_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Place>
						</cif>
						<cip>
							<xsl:variable name="var22_let" as="xs:string?">
								<xsl:for-each select="$var12_cip">
									<xsl:sequence select="fn:string(ns0:Incoterm)"/>
								</xsl:for-each>
							</xsl:variable>
							<Incoterm>
								<xsl:choose>
									<xsl:when test="fn:exists($var22_let)">
										<xsl:sequence select="$var22_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Incoterm>
							<xsl:variable name="var23_let" as="xs:string?">
								<xsl:for-each select="$var12_cip">
									<xsl:sequence select="fn:string(ns0:Place)"/>
								</xsl:for-each>
							</xsl:variable>
							<Place>
								<xsl:choose>
									<xsl:when test="fn:exists($var23_let)">
										<xsl:sequence select="$var23_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Place>
						</cip>
						<cpt>
							<xsl:variable name="var24_let" as="xs:string?">
								<xsl:for-each select="$var11_cpt">
									<xsl:sequence select="fn:string(ns0:Incoterm)"/>
								</xsl:for-each>
							</xsl:variable>
							<Incoterm>
								<xsl:choose>
									<xsl:when test="fn:exists($var24_let)">
										<xsl:sequence select="$var24_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Incoterm>
							<xsl:variable name="var25_let" as="xs:string?">
								<xsl:for-each select="$var11_cpt">
									<xsl:sequence select="fn:string(ns0:Place)"/>
								</xsl:for-each>
							</xsl:variable>
							<Place>
								<xsl:choose>
									<xsl:when test="fn:exists($var25_let)">
										<xsl:sequence select="$var25_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Place>
						</cpt>
						<dap>
							<xsl:variable name="var26_let" as="xs:string?">
								<xsl:for-each select="$var10_dap">
									<xsl:sequence select="fn:string(ns0:Incoterm)"/>
								</xsl:for-each>
							</xsl:variable>
							<Incoterm>
								<xsl:choose>
									<xsl:when test="fn:exists($var26_let)">
										<xsl:sequence select="$var26_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Incoterm>
							<xsl:variable name="var27_let" as="xs:string?">
								<xsl:for-each select="$var10_dap">
									<xsl:sequence select="fn:string(ns0:Place)"/>
								</xsl:for-each>
							</xsl:variable>
							<Place>
								<xsl:choose>
									<xsl:when test="fn:exists($var27_let)">
										<xsl:sequence select="$var27_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Place>
						</dap>
						<dat>
							<xsl:variable name="var28_let" as="xs:string?">
								<xsl:for-each select="$var15_dat">
									<xsl:sequence select="fn:string(ns0:Incoterm)"/>
								</xsl:for-each>
							</xsl:variable>
							<Incoterm>
								<xsl:choose>
									<xsl:when test="fn:exists($var28_let)">
										<xsl:sequence select="$var28_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Incoterm>
							<xsl:variable name="var29_let" as="xs:string?">
								<xsl:for-each select="$var15_dat">
									<xsl:sequence select="fn:string(ns0:Place)"/>
								</xsl:for-each>
							</xsl:variable>
							<Place>
								<xsl:choose>
									<xsl:when test="fn:exists($var29_let)">
										<xsl:sequence select="$var29_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Place>
						</dat>
						<ddp>
							<xsl:variable name="var30_let" as="xs:string?">
								<xsl:for-each select="$var14_ddp">
									<xsl:sequence select="fn:string(ns0:Incoterm)"/>
								</xsl:for-each>
							</xsl:variable>
							<Incoterm>
								<xsl:choose>
									<xsl:when test="fn:exists($var30_let)">
										<xsl:sequence select="$var30_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Incoterm>
							<xsl:variable name="var31_let" as="xs:string?">
								<xsl:for-each select="$var14_ddp">
									<xsl:sequence select="fn:string(ns0:Place)"/>
								</xsl:for-each>
							</xsl:variable>
							<Place>
								<xsl:choose>
									<xsl:when test="fn:exists($var31_let)">
										<xsl:sequence select="$var31_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Place>
						</ddp>
						<exw>
							<xsl:variable name="var32_let" as="xs:string?">
								<xsl:for-each select="$var9_exw">
									<xsl:sequence select="fn:string(ns0:Incoterm)"/>
								</xsl:for-each>
							</xsl:variable>
							<Incoterm>
								<xsl:choose>
									<xsl:when test="fn:exists($var32_let)">
										<xsl:sequence select="$var32_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Incoterm>
							<xsl:variable name="var33_let" as="xs:string?">
								<xsl:for-each select="$var9_exw">
									<xsl:sequence select="fn:string(ns0:Place)"/>
								</xsl:for-each>
							</xsl:variable>
							<Place>
								<xsl:choose>
									<xsl:when test="fn:exists($var33_let)">
										<xsl:sequence select="$var33_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Place>
						</exw>
						<fas>
							<xsl:variable name="var34_let" as="xs:string?">
								<xsl:for-each select="$var8_fas">
									<xsl:sequence select="fn:string(ns0:Incoterm)"/>
								</xsl:for-each>
							</xsl:variable>
							<Incoterm>
								<xsl:choose>
									<xsl:when test="fn:exists($var34_let)">
										<xsl:sequence select="$var34_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Incoterm>
							<xsl:variable name="var35_let" as="xs:string?">
								<xsl:for-each select="$var8_fas">
									<xsl:sequence select="fn:string(ns0:Place)"/>
								</xsl:for-each>
							</xsl:variable>
							<Place>
								<xsl:choose>
									<xsl:when test="fn:exists($var35_let)">
										<xsl:sequence select="$var35_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Place>
						</fas>
						<fca>
							<xsl:variable name="var36_let" as="xs:string?">
								<xsl:for-each select="$var7_fca">
									<xsl:sequence select="fn:string(ns0:Incoterm)"/>
								</xsl:for-each>
							</xsl:variable>
							<Incoterm>
								<xsl:choose>
									<xsl:when test="fn:exists($var36_let)">
										<xsl:sequence select="$var36_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Incoterm>
							<xsl:variable name="var37_let" as="xs:string?">
								<xsl:for-each select="$var7_fca">
									<xsl:sequence select="fn:string(ns0:Place)"/>
								</xsl:for-each>
							</xsl:variable>
							<Place>
								<xsl:choose>
									<xsl:when test="fn:exists($var37_let)">
										<xsl:sequence select="$var37_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Place>
						</fca>
						<fob>
							<xsl:variable name="var38_let" as="xs:string?">
								<xsl:for-each select="$var6_fob">
									<xsl:sequence select="fn:string(ns0:Incoterm)"/>
								</xsl:for-each>
							</xsl:variable>
							<Incoterm>
								<xsl:choose>
									<xsl:when test="fn:exists($var38_let)">
										<xsl:sequence select="$var38_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Incoterm>
							<xsl:variable name="var39_let" as="xs:string?">
								<xsl:for-each select="$var6_fob">
									<xsl:sequence select="fn:string(ns0:Place)"/>
								</xsl:for-each>
							</xsl:variable>
							<Place>
								<xsl:choose>
									<xsl:when test="fn:exists($var39_let)">
										<xsl:sequence select="$var39_let"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="''"/>
									</xsl:otherwise>
								</xsl:choose>
							</Place>
						</fob>
					</Incoterms>
					<webmastermail>
						<xsl:sequence select="xs:string(xs:anyURI(fn:string($var4_HeaderInfo/ns0:webmastermail)))"/>
					</webmastermail>
				</HeaderInfo>
			</xsl:for-each>
			<HeaderAddresses>
				<Supplier>
					<xsl:for-each select="$var2_DESADV">
						<Name>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:Supplier/ns0:Name)"/>
						</Name>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<Address>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:Supplier/ns0:Address)"/>
						</Address>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<PostalCode>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:Supplier/ns0:PostalCode)"/>
						</PostalCode>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<City>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:Supplier/ns0:City)"/>
						</City>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<Country>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:Supplier/ns0:Country)"/>
						</Country>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<GLN>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:Supplier/ns0:GLN)"/>
						</GLN>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<SupplierNumberGreenery>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:Supplier/ns0:SupplierNumberGreenery)"/>
						</SupplierNumberGreenery>
					</xsl:for-each>
				</Supplier>
				<Buyer>
					<xsl:for-each select="$var2_DESADV">
						<Name>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:Buyer/ns0:Name)"/>
						</Name>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<Address>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:Buyer/ns0:Address)"/>
						</Address>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<PostalCode>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:Buyer/ns0:PostalCode)"/>
						</PostalCode>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<City>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:Buyer/ns0:City)"/>
						</City>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<Country>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:Buyer/ns0:Country)"/>
						</Country>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<GLN>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:Buyer/ns0:GLN)"/>
						</GLN>
					</xsl:for-each>
				</Buyer>
				<DeliveryParty>
					<xsl:for-each select="$var2_DESADV">
						<Name>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:DeliveryParty/ns0:Name)"/>
						</Name>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<Address>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:DeliveryParty/ns0:Address)"/>
						</Address>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<PostalCode>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:DeliveryParty/ns0:PostalCode)"/>
						</PostalCode>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<City>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:DeliveryParty/ns0:City)"/>
						</City>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<Country>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:DeliveryParty/ns0:Country)"/>
						</Country>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<GLN>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:DeliveryParty/ns0:GLN)"/>
						</GLN>
					</xsl:for-each>
					<xsl:for-each select="$var2_DESADV">
						<LocCode>
							<xsl:sequence select="fn:string(ns0:HeaderAddresses/ns0:DeliveryParty/ns0:LocCode)"/>
						</LocCode>
					</xsl:for-each>
				</DeliveryParty>
			</HeaderAddresses>
			<xsl:for-each select="$var2_DESADV">
				<xsl:variable name="var40_result" as="node()+">
					<dummy xmlns="">
						<xsl:sequence select="''"/>
					</dummy>
				</xsl:variable>
				<xsl:variable name="var41_resultof_first" as="node()" select="$var40_result[xs:integer('1')]"/>
				<xsl:variable name="var42_result" as="node()+">
					<dummy xmlns="">
						<xsl:sequence select="''"/>
					</dummy>
				</xsl:variable>
				<xsl:variable name="var43_resultof_first" as="node()" select="$var42_result[xs:integer('1')]"/>
				<xsl:variable name="var44_result" as="node()+">
					<dummy xmlns="">
						<xsl:sequence select="''"/>
					</dummy>
				</xsl:variable>
				<xsl:variable name="var45_resultof_first" as="node()" select="$var44_result[xs:integer('1')]"/>
				<xsl:variable name="var46_result" as="node()+">
					<dummy xmlns="">
						<xsl:sequence select="''"/>
					</dummy>
				</xsl:variable>
				<xsl:variable name="var47_resultof_first" as="node()" select="$var46_result[xs:integer('1')]"/>
				<xsl:variable name="var48_result" as="node()+">
					<dummy xmlns="">
						<xsl:sequence select="''"/>
					</dummy>
				</xsl:variable>
				<xsl:variable name="var49_resultof_first" as="node()" select="$var48_result[xs:integer('1')]"/>
				<xsl:variable name="var50_result" as="node()+">
					<dummy xmlns="">
						<xsl:sequence select="''"/>
					</dummy>
				</xsl:variable>
				<xsl:variable name="var51_resultof_first" as="node()" select="$var50_result[xs:integer('1')]"/>
				<xsl:variable name="var52_result" as="node()+">
					<dummy xmlns="">
						<xsl:sequence select="''"/>
					</dummy>
				</xsl:variable>
				<xsl:variable name="var53_resultof_first" as="node()" select="$var52_result[xs:integer('1')]"/>
				<xsl:variable name="var54_result" as="node()+">
					<dummy xmlns="">
						<xsl:sequence select="''"/>
					</dummy>
				</xsl:variable>
				<xsl:variable name="var55_resultof_first" as="node()" select="$var54_result[xs:integer('1')]"/>
				<xsl:variable name="var56_result" as="node()+">
					<dummy xmlns="">
						<xsl:sequence select="''"/>
					</dummy>
				</xsl:variable>
				<xsl:variable name="var57_resultof_first" as="node()" select="$var56_result[xs:integer('1')]"/>
				<xsl:variable name="var58_result" as="node()+">
					<dummy xmlns="">
						<xsl:sequence select="''"/>
					</dummy>
				</xsl:variable>
				<xsl:variable name="var59_resultof_first" as="node()" select="$var58_result[xs:integer('1')]"/>
				<xsl:variable name="var60_result" as="node()+">
					<dummy xmlns="">
						<xsl:sequence select="''"/>
					</dummy>
				</xsl:variable>
				<xsl:variable name="var61_resultof_first" as="node()" select="$var60_result[xs:integer('1')]"/>
				<xsl:variable name="var62_result" as="node()+">
					<dummy xmlns="">
						<xsl:sequence select="''"/>
					</dummy>
				</xsl:variable>
				<xsl:variable name="var63_resultof_first" as="node()" select="$var62_result[xs:integer('1')]"/>
				<xsl:variable name="var64_result" as="node()+">
					<dummy xmlns="">
						<xsl:sequence select="''"/>
					</dummy>
				</xsl:variable>
				<xsl:variable name="var65_resultof_first" as="node()" select="$var64_result[xs:integer('1')]"/>
				<xsl:variable name="var66_result" as="node()+">
					<dummy xmlns="">
						<xsl:sequence select="''"/>
					</dummy>
				</xsl:variable>
				<xsl:variable name="var67_resultof_first" as="node()" select="$var66_result[xs:integer('1')]"/>
				<xsl:variable name="var68_result" as="node()+">
					<dummy xmlns="">
						<xsl:sequence select="''"/>
					</dummy>
				</xsl:variable>
				<xsl:variable name="var69_resultof_first" as="node()" select="$var68_result[xs:integer('1')]"/>
				<xsl:variable name="var70_result" as="node()+">
					<dummy xmlns="">
						<xsl:sequence select="''"/>
					</dummy>
				</xsl:variable>
				<xsl:variable name="var71_resultof_first" as="node()" select="$var70_result[xs:integer('1')]"/>
				<xsl:variable name="var72_nil" as="item()*" select="$var67_resultof_first/@xsi:nil"/>
				<xsl:variable name="var73_nil" as="item()*" select="$var53_resultof_first/@xsi:nil"/>
				<xsl:variable name="var74_nil" as="item()*" select="$var49_resultof_first/@xsi:nil"/>
				<xsl:variable name="var75_nil" as="item()*" select="$var59_resultof_first/@xsi:nil"/>
				<xsl:variable name="var76_nil" as="item()*" select="$var57_resultof_first/@xsi:nil"/>
				<xsl:variable name="var77_nil" as="item()*" select="$var47_resultof_first/@xsi:nil"/>
				<xsl:variable name="var78_nil" as="item()*" select="$var51_resultof_first/@xsi:nil"/>
				<xsl:variable name="var79_nil" as="item()*" select="$var69_resultof_first/@xsi:nil"/>
				<xsl:variable name="var80_nil" as="item()*" select="$var43_resultof_first/@xsi:nil"/>
				<xsl:variable name="var81_nil" as="item()*" select="$var45_resultof_first/@xsi:nil"/>
				<xsl:variable name="var82_nil" as="item()*" select="$var61_resultof_first/@xsi:nil"/>
				<xsl:variable name="var83_nil" as="item()*" select="$var71_resultof_first/@xsi:nil"/>
				<xsl:variable name="var84_nil" as="item()*" select="$var41_resultof_first/@xsi:nil"/>
				<xsl:variable name="var85_nil" as="item()*" select="$var55_resultof_first/@xsi:nil"/>
				<xsl:variable name="var86_nil" as="item()*" select="$var65_resultof_first/@xsi:nil"/>
				<xsl:variable name="var87_nil" as="item()*" select="$var63_resultof_first/@xsi:nil"/>
				<xsl:variable name="var88_val" as="xs:boolean" select="(fn:exists($var84_nil) and xs:boolean(fn:string($var84_nil)))"/>
				<xsl:variable name="var89_val" as="xs:boolean" select="(fn:exists($var85_nil) and xs:boolean(fn:string($var85_nil)))"/>
				<xsl:variable name="var90_val" as="xs:boolean" select="(fn:exists($var75_nil) and xs:boolean(fn:string($var75_nil)))"/>
				<xsl:variable name="var91_val" as="xs:boolean" select="(fn:exists($var73_nil) and xs:boolean(fn:string($var73_nil)))"/>
				<xsl:variable name="var92_val" as="xs:boolean" select="(fn:exists($var77_nil) and xs:boolean(fn:string($var77_nil)))"/>
				<xsl:variable name="var93_val" as="xs:boolean" select="(fn:exists($var81_nil) and xs:boolean(fn:string($var81_nil)))"/>
				<xsl:variable name="var94_val" as="xs:boolean" select="(fn:exists($var72_nil) and xs:boolean(fn:string($var72_nil)))"/>
				<xsl:variable name="var95_val" as="xs:boolean" select="(fn:exists($var79_nil) and xs:boolean(fn:string($var79_nil)))"/>
				<xsl:variable name="var96_val" as="xs:boolean" select="(fn:exists($var83_nil) and xs:boolean(fn:string($var83_nil)))"/>
				<xsl:variable name="var97_val" as="xs:boolean" select="(fn:exists($var82_nil) and xs:boolean(fn:string($var82_nil)))"/>
				<xsl:variable name="var98_val" as="xs:boolean" select="(fn:exists($var78_nil) and xs:boolean(fn:string($var78_nil)))"/>
				<xsl:variable name="var99_val" as="xs:boolean" select="(fn:exists($var74_nil) and xs:boolean(fn:string($var74_nil)))"/>
				<xsl:variable name="var100_val" as="xs:boolean" select="(fn:exists($var76_nil) and xs:boolean(fn:string($var76_nil)))"/>
				<xsl:variable name="var101_val" as="xs:boolean" select="(fn:exists($var86_nil) and xs:boolean(fn:string($var86_nil)))"/>
				<xsl:variable name="var102_val" as="xs:boolean" select="(fn:exists($var87_nil) and xs:boolean(fn:string($var87_nil)))"/>
				<xsl:variable name="var103_val" as="xs:boolean" select="(fn:exists($var80_nil) and xs:boolean(fn:string($var80_nil)))"/>
				<Consignment>
					<LineInfos>
						<xsl:for-each select="ns0:Consignment/ns0:LineInfos/ns0:LineInfo">
							<xsl:variable name="var104_ProducerGLN" as="item()*" select="ns0:ProducerGLN"/>
							<xsl:variable name="var105_Unitprice" as="item()*" select="ns0:Unitprice"/>
							<xsl:variable name="var106_resultof_exists" as="xs:boolean" select="fn:exists($var105_Unitprice)"/>
							<xsl:variable name="var107_DeliveryParty" as="node()" select="ns0:DeliveryParty"/>
							<xsl:variable name="var108_cast" as="xs:integer" select="xs:integer(fn:string(ns0:DespatchQuantityPCE))"/>
							<xsl:variable name="var109_result" as="node()+">
								<dummy xmlns="">
									<xsl:sequence select="''"/>
								</dummy>
							</xsl:variable>
							<xsl:variable name="var110_resultof_first" as="node()" select="$var109_result[xs:integer('1')]"/>
							<xsl:variable name="var111_nil" as="item()*" select="$var110_resultof_first/@xsi:nil"/>
							<xsl:variable name="var112_val" as="xs:boolean" select="(fn:exists($var111_nil) and xs:boolean(fn:string($var111_nil)))"/>
							<LineInfo>
								<LineNo>
									<xsl:sequence select="fn:string(ns0:LineNo)"/>
								</LineNo>
								<GTIN>
									<xsl:sequence select="fn:string(ns0:GTIN)"/>
								</GTIN>
								<BuyerProductCode>
									<xsl:sequence select="fn:string(ns0:BuyerProductCode)"/>
								</BuyerProductCode>
								<GreeneryFullProductCode>
									<xsl:sequence select="fn:string(ns0:GreeneryFullProductCode)"/>
								</GreeneryFullProductCode>
								<Description>
									<xsl:sequence select="fn:string(ns0:Description)"/>
								</Description>
								<Content>
									<xsl:sequence select="fn:string(ns0:Content)"/>
								</Content>
								<CU>
									<xsl:sequence select="fn:string(ns0:CU)"/>
								</CU>
								<PackageType>
									<xsl:sequence select="fn:string(ns0:PackageType)"/>
								</PackageType>
								<DespatchQuantityPCE>
									<xsl:sequence select="xs:string($var108_cast)"/>
								</DespatchQuantityPCE>
								<OrderedQuantityPCE>
									<xsl:sequence select="xs:string($var108_cast)"/>
								</OrderedQuantityPCE>
								<NumberOfUnitsPerPallet>
									<xsl:sequence select="xs:string(xs:integer(fn:string(ns0:NumberOfUnitsPerPallet)))"/>
								</NumberOfUnitsPerPallet>
								<xsl:variable name="var113_result" as="node()+">
									<xsl:choose>
										<xsl:when test="$var106_resultof_exists">
											<xsl:for-each select="$var105_Unitprice">
												<dummy xmlns="">
													<xsl:sequence select="fn:string(.)"/>
												</dummy>
											</xsl:for-each>
										</xsl:when>
										<xsl:otherwise>
											<dummy xmlns="">
												<xsl:attribute name="xsi:nil" select="'true'"/>
											</dummy>
										</xsl:otherwise>
									</xsl:choose>
								</xsl:variable>
								<xsl:for-each select="$var113_result">
									<xsl:variable name="var114_nil" as="item()*" select="@xsi:nil"/>
									<xsl:variable name="var115_val" as="xs:boolean" select="(fn:exists($var114_nil) and xs:boolean(fn:string($var114_nil)))"/>
									<Unitprice>
										<xsl:if test="fn:not($var115_val)">
											<xsl:if test="fn:not($var115_val)">
												<xsl:sequence select="fn:string(.)"/>
											</xsl:if>
										</xsl:if>
									</Unitprice>
								</xsl:for-each>
								<xsl:variable name="var116_result" as="node()+">
									<xsl:choose>
										<xsl:when test="$var106_resultof_exists">
											<xsl:for-each select="$var105_Unitprice">
												<dummy xmlns="">
													<xsl:sequence select="fn:string(.)"/>
												</dummy>
											</xsl:for-each>
										</xsl:when>
										<xsl:otherwise>
											<dummy xmlns="">
												<xsl:attribute name="xsi:nil" select="'true'"/>
											</dummy>
										</xsl:otherwise>
									</xsl:choose>
								</xsl:variable>
								<xsl:for-each select="$var116_result">
									<xsl:variable name="var117_nil" as="item()*" select="@xsi:nil"/>
									<xsl:variable name="var118_val" as="xs:boolean" select="(fn:exists($var117_nil) and xs:boolean(fn:string($var117_nil)))"/>
									<OrderPrice>
										<xsl:if test="fn:not($var118_val)">
											<xsl:if test="fn:not($var118_val)">
												<xsl:sequence select="fn:string(.)"/>
											</xsl:if>
										</xsl:if>
									</OrderPrice>
								</xsl:for-each>
								<NumberOfPallets>
									<xsl:sequence select="xs:string(xs:integer(fn:string(ns0:NumberOfPallets)))"/>
								</NumberOfPallets>
								<xsl:for-each select="ns0:PalletCodeHAS">
									<PalletCodeHAS>
										<xsl:sequence select="fn:string(.)"/>
									</PalletCodeHAS>
								</xsl:for-each>
								<FreeText>
									<xsl:if test="fn:not($var112_val)">
										<xsl:if test="fn:not($var112_val)">
											<xsl:sequence select="fn:string($var110_resultof_first)"/>
										</xsl:if>
									</xsl:if>
								</FreeText>
								<DeliveryParty>
									<Name>
										<xsl:sequence select="fn:string($var107_DeliveryParty/ns0:Name)"/>
									</Name>
									<Address>
										<xsl:sequence select="fn:string($var107_DeliveryParty/ns0:Address)"/>
									</Address>
									<PostalCode>
										<xsl:sequence select="fn:string($var107_DeliveryParty/ns0:PostalCode)"/>
									</PostalCode>
									<City>
										<xsl:sequence select="fn:string($var107_DeliveryParty/ns0:City)"/>
									</City>
									<Country>
										<xsl:sequence select="fn:string($var107_DeliveryParty/ns0:Country)"/>
									</Country>
									<GLN>
										<xsl:sequence select="fn:string($var107_DeliveryParty/ns0:GLN)"/>
									</GLN>
									<LocCode>
										<xsl:sequence select="fn:string($var107_DeliveryParty/ns0:LocCode)"/>
									</LocCode>
								</DeliveryParty>
								<xsl:variable name="var119_result" as="node()+">
									<xsl:choose>
										<xsl:when test="fn:exists($var104_ProducerGLN)">
											<xsl:for-each select="$var104_ProducerGLN">
												<dummy xmlns="">
													<xsl:sequence select="fn:string(.)"/>
												</dummy>
											</xsl:for-each>
										</xsl:when>
										<xsl:otherwise>
											<dummy xmlns="">
												<xsl:attribute name="xsi:nil" select="'true'"/>
											</dummy>
										</xsl:otherwise>
									</xsl:choose>
								</xsl:variable>
								<xsl:for-each select="$var119_result">
									<xsl:variable name="var120_nil" as="item()*" select="@xsi:nil"/>
									<xsl:variable name="var121_val" as="xs:boolean" select="(fn:exists($var120_nil) and xs:boolean(fn:string($var120_nil)))"/>
									<ProducerGLN>
										<xsl:if test="fn:not($var121_val)">
											<xsl:if test="fn:not($var121_val)">
												<xsl:sequence select="fn:string(.)"/>
											</xsl:if>
										</xsl:if>
									</ProducerGLN>
								</xsl:for-each>
							</LineInfo>
						</xsl:for-each>
					</LineInfos>
					<PalletInformationEuro>
						<NumberOfPallets>
							<xsl:sequence select="xs:string(xs:integer('0'))"/>
						</NumberOfPallets>
						<PalletCodeISO>
							<xsl:if test="fn:not($var101_val)">
								<xsl:if test="fn:not($var101_val)">
									<xsl:sequence select="fn:string($var65_resultof_first)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeISO>
						<PalletCodeHAS>
							<xsl:if test="fn:not($var90_val)">
								<xsl:if test="fn:not($var90_val)">
									<xsl:sequence select="fn:string($var59_resultof_first)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeHAS>
					</PalletInformationEuro>
					<PalletInformationDPA>
						<NumberOfPallets>
							<xsl:sequence select="xs:string(xs:integer('0'))"/>
						</NumberOfPallets>
						<PalletCodeISO>
							<xsl:if test="fn:not($var97_val)">
								<xsl:if test="fn:not($var97_val)">
									<xsl:sequence select="fn:string($var61_resultof_first)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeISO>
						<PalletCodeHAS>
							<xsl:if test="fn:not($var100_val)">
								<xsl:if test="fn:not($var100_val)">
									<xsl:sequence select="fn:string($var57_resultof_first)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeHAS>
					</PalletInformationDPA>
					<PalletInformationPool>
						<NumberOfPallets>
							<xsl:sequence select="xs:string(xs:integer('0'))"/>
						</NumberOfPallets>
						<PalletCodeISO>
							<xsl:if test="fn:not($var99_val)">
								<xsl:if test="fn:not($var99_val)">
									<xsl:sequence select="fn:string($var49_resultof_first)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeISO>
						<PalletCodeHAS>
							<xsl:if test="fn:not($var93_val)">
								<xsl:if test="fn:not($var93_val)">
									<xsl:sequence select="fn:string($var45_resultof_first)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeHAS>
					</PalletInformationPool>
					<PalletInformationChepBlok>
						<NumberOfPallets>
							<xsl:sequence select="xs:string(xs:integer('0'))"/>
						</NumberOfPallets>
						<PalletCodeISO>
							<xsl:if test="fn:not($var89_val)">
								<xsl:if test="fn:not($var89_val)">
									<xsl:sequence select="fn:string($var55_resultof_first)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeISO>
						<PalletCodeHAS>
							<xsl:if test="fn:not($var94_val)">
								<xsl:if test="fn:not($var94_val)">
									<xsl:sequence select="fn:string($var67_resultof_first)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeHAS>
					</PalletInformationChepBlok>
					<PalletInformationOneway>
						<NumberOfPallets>
							<xsl:sequence select="xs:string(xs:integer('0'))"/>
						</NumberOfPallets>
						<PalletCodeISO>
							<xsl:if test="fn:not($var95_val)">
								<xsl:if test="fn:not($var95_val)">
									<xsl:sequence select="fn:string($var69_resultof_first)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeISO>
						<PalletCodeHAS>
							<xsl:if test="fn:not($var98_val)">
								<xsl:if test="fn:not($var98_val)">
									<xsl:sequence select="fn:string($var51_resultof_first)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeHAS>
					</PalletInformationOneway>
					<PalletInformationChepEuro>
						<NumberOfPallets>
							<xsl:sequence select="xs:string(xs:integer('0'))"/>
						</NumberOfPallets>
						<PalletCodeISO>
							<xsl:if test="fn:not($var88_val)">
								<xsl:if test="fn:not($var88_val)">
									<xsl:sequence select="fn:string($var41_resultof_first)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeISO>
						<PalletCodeHAS>
							<xsl:if test="fn:not($var92_val)">
								<xsl:if test="fn:not($var92_val)">
									<xsl:sequence select="fn:string($var47_resultof_first)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeHAS>
					</PalletInformationChepEuro>
					<PalletInformationSkid>
						<NumberOfPallets>
							<xsl:sequence select="xs:string(xs:integer('0'))"/>
						</NumberOfPallets>
						<PalletCodeISO>
							<xsl:if test="fn:not($var96_val)">
								<xsl:if test="fn:not($var96_val)">
									<xsl:sequence select="fn:string($var71_resultof_first)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeISO>
						<PalletCodeHAS>
							<xsl:if test="fn:not($var91_val)">
								<xsl:if test="fn:not($var91_val)">
									<xsl:sequence select="fn:string($var53_resultof_first)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeHAS>
					</PalletInformationSkid>
					<PalletInformationSuperVers>
						<NumberOfPallets>
							<xsl:sequence select="xs:string(xs:integer('0'))"/>
						</NumberOfPallets>
						<PalletCodeISO>
							<xsl:if test="fn:not($var103_val)">
								<xsl:if test="fn:not($var103_val)">
									<xsl:sequence select="fn:string($var43_resultof_first)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeISO>
						<PalletCodeHAS>
							<xsl:if test="fn:not($var102_val)">
								<xsl:if test="fn:not($var102_val)">
									<xsl:sequence select="fn:string($var63_resultof_first)"/>
								</xsl:if>
							</xsl:if>
						</PalletCodeHAS>
					</PalletInformationSuperVers>
				</Consignment>
			</xsl:for-each>
		</DESADV>
	</xsl:template>
</xsl:stylesheet>
